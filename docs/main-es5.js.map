{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/graph/graph.component.ts","webpack:///src/app/graph/graph.component.html","webpack:///src/app/graph/upload-button/upload-button.component.ts","webpack:///src/app/graph/upload-button/upload-button.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GraphComponent","properties","weights","output","data","i","count","graph","nodes","label","labelSize","push","refresh","targetLayer","value","j","index","edgeOffset","weight","color","Math","round","random","toString","edges","activatedValue","pow","E","nodeOffset","toPrecision","layer","name","previous","Array","fill","map","length","generateNodeColor","addNode","x","y","size","addEdge","source","target","settings","edgeColor","defaultEdgeColor","batchEdgesDrawing","sideMargin","canvasEdgesBatchSize","edgeHoverSizeRatio","singleHover","defaultLabelSize","addLayer","input","feedForward","UploadButtonComponent","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'net-viz';\n\n  ngOnInit() {\n    // var sigmaJs = new sigma('container');\n\n  }\n}\n","<nav class=\"navbar navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <img src=\"https://cdn1.iconfinder.com/data/icons/seo-accessibility-usability-1-3/256/Concept_Map-512.png\" width=\"30\" height=\"30\" alt=\"\">\n    Net Viz <app-upload-button></app-upload-button>\n  </a>\n</nav>\n<!-- <div class=\"container\">\n     <div class=\"jumbotron\">\n     <h1>Welcome</h1>\n     <h2>Angular & Bootstrap Demo</h2>\n     </div>\n     <div class=\"panel panel-primary\">\n     <div class=\"panel-body\">\n     </div>\n     </div>\n     </div> -->\n<app-graph #graph></app-graph>\n<button>Forward</button>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GraphComponent } from './graph/graph.component';\nimport { UploadButtonComponent } from './graph/upload-button/upload-button.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphComponent,\n    UploadButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport sigma from 'sigma';\n\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.scss']\n})\nexport class GraphComponent implements OnInit {\n  graph: sigma;\n  properties: {\n    name: string,\n    count: number,\n    edgeOffset: number,\n    nodeOffset: number\n  }[] = [];\n  weights: number[][] = [];\n  output: number[][] = [];\n\n\n  constructor() { }\n\n  public input(data: number[]) {\n    this.output[0] = [];\n    for (let i = 0; i < this.properties[0].count; i++) {\n      this.graph.graph.nodes()[i].label = `${data[i]}`;\n      this.graph.graph.nodes()[i].labelSize = 30;  // FIXME wrong attribute\n      this.output[0].push(data[i])\n    }\n\n    this.graph.refresh();\n  }\n\n  private feedForward(targetLayer: number) {\n    for (let i = 0; i < this.properties[targetLayer].count; i++) {\n      var value = 0;\n      for (let j = 0; j < this.properties[targetLayer - 1].count; j++) {\n        // TODO calculate endge \"weights\"\n        const index = this.properties[targetLayer].edgeOffset + (i*this.properties[targetLayer].count + j);\n        const weight = this.weights[targetLayer-1][i*this.properties[targetLayer-1].count + j];\n\n        value += weight * this.output[targetLayer-1][j];\n\n        let color = (Math.round((Math.random() * 20) % 16)).toString();\n        this.graph.graph.edges()[index].color = `#${color}${color}${color}`;\n      }\n      const activatedValue = 1/(1+Math.pow(Math.E, -value));\n      this.graph.graph.nodes()[this.properties[targetLayer].nodeOffset + i].label  = `${activatedValue.toPrecision(4)}`;\n      this.output[targetLayer].push(activatedValue);\n      this.graph.refresh();\n    }\n\n  }\n\n  private generateNodeColor(layer: number) {\n    if (layer === 0) { return '#4499ff'; }  // Input Layer has fixed color\n    return '#' + ((1 << 24) * Math.random() | 0).toString(16);\n  }\n\n  private async addLayer(count: number, layer: number, name: string, previous?: string) {\n    // NOTE Randomly generated placeholder weights\n    if (layer !== 0){\n      this.weights.push(Array(count * this.properties[layer - 1].count).fill(2).map(() => Math.random() % 2));\n    }\n\n    this.output.push([]); // Initialize empty output for layer\n\n    this.properties.push({\n      name: name,\n      count: count,\n      edgeOffset: this.graph.graph.edges().length,\n      nodeOffset: this.graph.graph.nodes().length\n    });\n\n    const color: string =  this.generateNodeColor(layer);\n    for (let i = 0; i < count; i++) {\n      this.graph.graph.addNode({\n        id: `${name}-${i}`,\n        x: layer,\n        y: count / 2 - i, // count/2 is the offset to center the layer\n        label: `${name}-${i}`,\n        size: 1,\n        color: color\n      });\n\n      if (!previous) { continue; }\n\n      for (let j = 0; j < this.properties[layer - 1].count; j ++) {\n        this.graph.graph.addEdge({\n          id: `${previous}${j}-${name}${i}`,\n          source: `${previous}-${j}`,\n          target: `${name}-${i}`\n        });\n      }\n    }\n    this.graph.refresh();\n  }\n\n  ngOnInit(): void {\n    this.graph = new sigma('container');\n    this.graph.settings({\n      edgeColor: 'default',\n      defaultEdgeColor: '#999',\n      batchEdgesDrawing: true,\n      sideMargin: 1,\n      canvasEdgesBatchSize: 50,\n      edgeHoverSizeRatio: 2,\n      singleHover: true,\n      defaultLabelSize: 18\n    });\n\n    this.addLayer(3, 0, 'input');\n    this.addLayer(6,1, 'dense_0', 'input');\n    this.addLayer(4,2, 'dense_1', 'dense_0');\n    this.addLayer(2,3, 'output', 'dense_1');\n    this.input([0.2, 0.2, 0.6]);\n    this.feedForward(1);\n    this.feedForward(2);\n    this.feedForward(3);\n  }\n}\n","<div style=\"width:100%; height:1000px;\" id=\"container\"> .</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-button',\n  templateUrl: './upload-button.component.html',\n  styleUrls: ['./upload-button.component.scss']\n})\nexport class UploadButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button>Upload Network</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}